/* Generated by Together */

#include "stdafx.h"
#include "IPropertyHost.h"
#include "EPropListCtrl.h"
#include "EPropWndEdit.h"
#include "EPropertyColor.h"
bool EPropertyColor::OnPropApply()
{
	ASSERT( m_bSelected == true );
	ASSERT( m_pEdit     != NULL );
	ASSERT( IsEnabled() == true );

	bool bPropertyChanged = false;

	CString s;
	m_pEdit->GetWindowText(s);

	bool bFormatGood = false;

	int r=-1;
	int g=-1;
	int b=-1;

	if( sscanf(s,"%d,%d,%d",&r,&g,&b) == 3 )
	{
		bFormatGood = true;
	}
	else
	{
		if( sscanf(s,"%d %d %d",&r,&g,&b) == 3 )
		{
			bFormatGood = true;
		}
	}

	if( bFormatGood )
	{
		if( (0<=r&&r<=255) && (0<=g&&g<=255) && (0<=b&&b<=255) )
		{
			COLORREF oldc = *(COLORREF*)m_pProperty;
			COLORREF newc = RGB(r,g,b);
			if( oldc != newc )
			{
				if( m_pHost->PropertyChanging(m_pProperty,&newc) )
				{
					*(COLORREF*)m_pProperty = newc;
					bPropertyChanged = true;
				}
			}
		}
	}

	return bPropertyChanged;
}
CString EPropertyColor::GetTextValue()
{
	int nColor = *((COLORREF*)m_pProperty);
	int rr = ( nColor       ) & 0xff;
	int gg = ( nColor >> 8  ) & 0xff;
	int bb = ( nColor >> 16 ) & 0xff;
	CString s;
	s.Format("%d,%d,%d" , rr , gg , bb );
	return s;
}
void EPropertyColor::DrawIcon( CDC* pDC , EPropWnd* pParent , const CRect& Rect )
{
	CRect r = Rect;

	pDC->SelectStockObject( BLACK_PEN );
	pDC->SelectStockObject( NULL_BRUSH );
	pDC->Rectangle(r);

	r.DeflateRect(1,1);
	pDC->FillSolidRect( &r , *(COLORREF*)m_pProperty );

}
bool EPropertyColor::HasEdit()
{
	return true;
}
bool EPropertyColor::HasButton()
{
	return true;
}
int EPropertyColor::GetIconWidth()
{
	return 13;
}
bool EPropertyColor::OnCommand( EPropWnd* pParent , WPARAM wParam , LPARAM lParam )
{
	bool bPropertyChanged = false;

	CColorDialog dia;

	if(dia.DoModal() == IDOK )
	{
		COLORREF nColor = dia.GetColor();

		if( m_pHost->PropertyChanging(m_pProperty,&nColor) )
		{
			*(COLORREF*)m_pProperty = nColor;
			bPropertyChanged = true;
		}
	}

	return bPropertyChanged;
}

EPropertyColor::EPropertyColor( IPropertyHost* pHost , const CString& sName , COLORREF* pProperty , bool bEnabled ) : EIconTextButtonProperty( pHost , sName , pProperty , bEnabled )
{
}

EPropertyColor::~EPropertyColor()
{
}
