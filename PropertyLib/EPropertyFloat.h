/* Generated by Together */

#ifndef EPROPERTYFLOAT_H
#define EPROPERTYFLOAT_H

#include "EIconTextButtonProperty.h"
class EPropertyFloat;
class IPropertyHost;

class EPropertyFloat : public EIconTextButtonProperty
{

private:

	double  m_dMin;
	double  m_dMax;
	int     m_nNumDecimals;
	double  m_dScale;		//scale the property by this value before showing on screen (eg for showing value in another unit)
	CString m_sFixedUnit;
	const CString* m_pUnitSymbol;	//this holds pointer to the string holding the unit
	const double*  m_pScaleMul;		//this holds pointer to scale value
	const double*  m_pScaleDiv;		//this holds pointer to scale value

protected:

	double GetScale();				//mul/div
	virtual bool HasEdit();

public:

	virtual CString GetTextValue();
	virtual bool OnPropApply();

public:

    EPropertyFloat(  IPropertyHost* pHost , const CString& sName , float* pProperty , const CString& sUnit , double dMinAllowed=0 , double dMaxAllowed=0 , bool bEnabled=true );
	virtual ~EPropertyFloat();

	EPropertyFloat* SetStyle( UINT nFormatFlags=EIconTextButtonProperty::DEFAULT , int nNumDecimals=-1 );	//present value with thousand separator?
	EPropertyFloat* SetScale( double dScale );					//scale value for presentation? the value in your variable is scaled by this value, before showing on gui
	EPropertyFloat* SetUnit( const CString* pUnitSymbol );
	EPropertyFloat* SetScale( const double* pMultiply , const double* pDivide );
	
};

#endif //EPROPERTYFLOAT_H